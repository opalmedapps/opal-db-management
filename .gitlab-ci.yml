# dummy stages to follow the template guidelines
stages:
  - build
  - test
  - deploy
  - review
  - dast
  - staging
  - canary
  - production
  - incremental rollout 10%
  - incremental rollout 25%
  - incremental rollout 50%
  - incremental rollout 100%
  - performance
  - cleanup


variables:
  TEST_DISABLED: "true"
  DAST_DISABLED: "true"
  POSTGRES_ENABLED: "false"
  CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/$CI_JOB_NAME"


before_script:
  - echo $SSH_PRIVATE_KEY | base64 -d | tr -d '\r' > ~/.deploy_key
  - AUTO_DEVOPS_BUILD_IMAGE_EXTRA_ARGS="--build-arg CACHEBUST=$(date +%s) --ssh ssh_key=~/.deploy_key"
  - echo $AUTO_DEVOPS_BUILD_IMAGE_EXTRA_ARGS
  # - eval echo $AUTO_DEVOPS_BUILD_IMAGE_EXTRA_ARGS
  # - echo $($AUTO_DEVOPS_BUILD_IMAGE_EXTRA_ARGS)
  # - args="$(eval echo $foo)"
  # - build_args=$AUTO_DEVOPS_BUILD_IMAGE_EXTRA_ARGS
#   ## Create the SSH directory and give it the right permissions
#   ##
#   - eval $(ssh-agent -s)
#   - AUTO_DEVOPS_BUILD_IMAGE_EXTRA_ARGS="--build-arg CACHEBUST=$(date +%s) --ssh ssh_key=$$SSH_AUTH_SOCK"
  # - image_tagged="$CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG"
  # - image_latest="$CI_APPLICATION_REPOSITORY:latest"
  # - docker buildx build --build-arg CACHEBUST=$(date +%s) --ssh ssh_key=$SSH_PRIVATE_KEY2 --tag $image_tagged --tag $image_latest .

# services:
#   - docker:20.10.16-dind
# clone:
#   stage: build
#   image: 
#     name: alpine/git
#     entrypoint: [""]
#   before_script:
#     - git --version
#   script:
#     ## Create the SSH directory and give it the right permissions
#     ##
#     - mkdir -p ~/.ssh
#     - chmod 700 ~/.ssh
#     - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
#     - cp $SSH_PRIVATE_KEY ~/.ssh/id_ed25519
#     - chmod 0700 ~/.ssh/id_ed25519
#     - ls -la ~/.ssh
#     - git clone git@gitlab.com:opalmedapps/dbv_opaldb.git
# clone:
#   stage: build
#   image: docker
#   before_script:
#     - docker version
#   script:
#     ## Create the SSH directory and give it the right permissions
#     ##
#     - mkdir -p ~/.ssh
#     - chmod 700 ~/.ssh
#     - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
#     - echo $SSH_PRIVATE_KEY | base64 -d > ~/.ssh/id_ed25519
#     - chmod 0600 ~/.ssh/id_ed25519
#     - ls -la ~/.ssh
#     # - git clone git@gitlab.com:opalmedapps/dbv_opaldb.git
#     - DOCKER_BUILDKIT=1 docker build --ssh ssh_key=/root/.ssh/id_ed25519 .

# ritest:
#   stage: deploy
#   tags:
#     - ri-dev
#   image: ubuntu:latest
#   before_script:
#     - uname -a
#   script:
#     - whoami
#     - apt update && apt install -y openssh-client
#     # - curl https://lxvmri02.muhcad.muhcfrd.ca/pds?wsdl
#     - mkdir -p ~/.ssh
#     - chmod 700 ~/.ssh
#     - ssh-keyscan lxvmri05.muhcad.muhcfrd.ca >> ~/.ssh/known_hosts
#     - ssh opalsupt@lxvmri05.muhcad.muhcfrd.ca "whoami; pwd; ls -la ."

include: 
  - template: Auto-DevOps.gitlab-ci.yml
  - local: '.gitlab/templates/Build.gitlab-ci.yml'
