include:
  - template: Auto-DevOps.gitlab-ci.yml

variables:
  TEST_DISABLED: "true"
  DAST_DISABLED: "true"
  POSTGRES_ENABLED: "false"
  # DOCKER_TLS_CERTDIR: "/certs"
  

before_script:
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
  - echo $SSH_PRIVATE_KEY | base64 -d > ~/.ssh/id_ed25519
  - chmod 0600 ~/.ssh/id_ed25519
  - AUTO_DEVOPS_BUILD_IMAGE_EXTRA_ARGS="--build-arg CACHEBUST=$(date +%s) --ssh ssh_key=/root/.ssh/id_ed25519"
  - echo $AUTO_DEVOPS_BUILD_IMAGE_EXTRA_ARGS
  - ls -la

# services:
#   - docker:20.10.16-dind
# clone:
#   stage: build
#   image: 
#     name: alpine/git
#     entrypoint: [""]
#   before_script:
#     - git --version
#   script:
#     ## Create the SSH directory and give it the right permissions
#     ##
#     - mkdir -p ~/.ssh
#     - chmod 700 ~/.ssh
#     - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
#     - cp $SSH_PRIVATE_KEY ~/.ssh/id_ed25519
#     - chmod 0700 ~/.ssh/id_ed25519
#     - ls -la ~/.ssh
#     - git clone git@gitlab.com:opalmedapps/dbv_opaldb.git
# clone:
#   stage: build
#   image: docker
#   before_script:
#     - docker version
#   script:
#     ## Create the SSH directory and give it the right permissions
#     ##
#     - mkdir -p ~/.ssh
#     - chmod 700 ~/.ssh
#     - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
#     - echo $SSH_PRIVATE_KEY | base64 -d > ~/.ssh/id_ed25519
#     - chmod 0600 ~/.ssh/id_ed25519
#     - ls -la ~/.ssh
#     # - git clone git@gitlab.com:opalmedapps/dbv_opaldb.git
#     - DOCKER_BUILDKIT=1 docker build --ssh ssh_key=/root/.ssh/id_ed25519 .

ritest:
  stage: deploy
  tags:
    - ri-dev
  image: alpine
  script:
    # - apt add --no-cache curl
    - curl https://lxvmri02.muhcad.muhcfrd.ca/pds?wsdl